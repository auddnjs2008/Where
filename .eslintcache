[{"C:\\React\\where\\src\\index.js":"1","C:\\React\\where\\src\\Components\\App.js":"2","C:\\React\\where\\src\\firebase.js":"3","C:\\React\\where\\src\\Components\\map.js":"4","C:\\React\\where\\src\\Components\\Router.js":"5","C:\\React\\where\\src\\Routes\\Home.js":"6","C:\\React\\where\\src\\Routes\\Auth.js":"7","C:\\React\\where\\src\\Routes\\MyPage.js":"8","C:\\React\\where\\src\\Components\\Navigator.js":"9","C:\\React\\where\\src\\placeCode.js":"10","C:\\React\\where\\src\\Components\\roadview.js":"11"},{"size":168,"mtime":1608687167858,"results":"12","hashOfConfig":"13"},{"size":742,"mtime":1609243913226,"results":"14","hashOfConfig":"13"},{"size":634,"mtime":1609114902406,"results":"15","hashOfConfig":"13"},{"size":1792,"mtime":1609835398038,"results":"16","hashOfConfig":"13"},{"size":687,"mtime":1609160381696,"results":"17","hashOfConfig":"13"},{"size":11370,"mtime":1609853051068,"results":"18","hashOfConfig":"13"},{"size":3179,"mtime":1609590264431,"results":"19","hashOfConfig":"13"},{"size":8103,"mtime":1609724067383,"results":"20","hashOfConfig":"13"},{"size":429,"mtime":1609160782364,"results":"21","hashOfConfig":"13"},{"size":2622,"mtime":1609206687813,"results":"22","hashOfConfig":"13"},{"size":4984,"mtime":1609853557283,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1j0po3t",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\React\\where\\src\\index.js",[],["53","54"],"C:\\React\\where\\src\\Components\\App.js",["55"],"import { useEffect, useState } from \"react\";\nimport { authService } from \"../firebase\";\nimport Map from \"./map\";\nimport AppRouter from \"./Router\";\n\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [userObj,setUserObj] = useState(null); \n\n  useEffect(()=>{\n    authService.onAuthStateChanged(user=>{\n      if(user){ \n        setUserObj({\n          displayName:user.displayName ? user.displayName : \"anonymous\",\n          uid:user.uid,\n          updateProfile:(who)=>user.updateProfile(who)\n        })\n      }else{\n         setUserObj(null);\n      }\n      setInit(true);\n    })\n  },[])\n\n\n  return (\n      init ? <AppRouter isLogIn={Boolean(userObj)} userObj={userObj}></AppRouter> : \"Loading....\"\n  );\n}\n\nexport default App;\n","C:\\React\\where\\src\\firebase.js",[],"C:\\React\\where\\src\\Components\\map.js",["56","57","58","59"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst Marker = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -80%);\r\n  opacity: 0.7;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #e74c3c;\r\n  border-radius: 50%;\r\n  display: none;\r\n  z-index: 2;\r\n  @keyframes Marker {\r\n    0% {\r\n      opacity: 0.7;\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      width: 0px;\r\n      height: 0px;\r\n      display: none;\r\n    }\r\n  }\r\n  animation: Marker 1s linear infinite;\r\n`;\r\n\r\nconst Map = ({ position, setMap, isMyPage }) => {\r\n  const [marker, setMarker] = useState(null);\r\n  const [controller, setControll] = useState(new kakao.maps.ZoomControl());\r\n  const positionObj = new kakao.maps.LatLng(position[0], position[1]);\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"map\");\r\n    const options = {\r\n      center: positionObj,\r\n      level: 3,\r\n    };\r\n\r\n    const map = new kakao.maps.Map(container, options);\r\n    //맵이 생성 되면 마크를 생성한다.\r\n    if (!isMyPage) {\r\n      setMarker(\r\n        new kakao.maps.Marker({\r\n          map: map,\r\n          position: positionObj,\r\n        })\r\n      );\r\n    }\r\n    // 로드뷰 도로를 지도위에 올린다.\r\n    map.addOverlayMapTypeId(kakao.maps.MapTypeId.ROADVIEW);\r\n    // 컨트롤러 생성\r\n    map.addControl(controller, kakao.maps.ControlPosition.TOPRIGHT);\r\n    setMap(map);\r\n  }, [position]);\r\n\r\n  return (\r\n    <div\r\n      id=\"map\"\r\n      style={{ position: \"relative\", width: \"500px\", height: \"500px\" }}\r\n    >\r\n      <Marker className=\"center\"></Marker>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","C:\\React\\where\\src\\Components\\Router.js",["60","61","62"],"import React, { useState } from \"react\";\r\nimport {HashRouter as Router,Redirect,Route,Switch} from \"react-router-dom\";\r\nimport Auth from \"../Routes/Auth\";\r\nimport Home from \"../Routes/Home\";\r\nimport MyPage from \"../Routes/MyPage\";\r\n\r\n\r\n\r\nconst AppRouter =({isLogIn, userObj}) =>{\r\n\r\n    return (\r\n        <Router>\r\n            {isLogIn ?\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n            </Route>\r\n            <Route path=\"/mypage\">\r\n                <MyPage userObj={userObj} />\r\n            </Route>\r\n            </>\r\n            :<Route exact path=\"/\"><Auth/></Route>}\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","C:\\React\\where\\src\\Routes\\Home.js",["63","64","65","66","67"],"C:\\React\\where\\src\\Routes\\Auth.js",["68","69","70"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { authService, firebaseInstant } from \"../firebase\";\r\nimport KaKaoLogin from \"react-kakao-login\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\n\r\nconst { Kakao } = window;\r\n\r\nconst Form = styled.form``;\r\n\r\nconst SocialLogin = styled.div``;\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let user;\r\n    try {\r\n      if (newUser) {\r\n        // 계정 생성을 해준다.\r\n        user = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // 로그인을 해준다.\r\n        user = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const socialLoginClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    try {\r\n      if (name === \"google\") {\r\n        provider = new firebaseInstant.auth.GoogleAuthProvider();\r\n      } else if (name === \"github\") {\r\n        provider = new firebaseInstant.auth.GithubAuthProvider();\r\n      }\r\n\r\n      await authService.signInWithPopup(provider);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  // const kakaoLogin = ()=>{\r\n\r\n  //     Kakao.Auth.login({\r\n  //         success: (auth) =>\r\n  //         fail:(error) => console.log(error)\r\n  //     })\r\n  // }\r\n\r\n  const responseKakao = (res) => {\r\n    localStorage.setItem(\"kakao\", JSON.stringify(res));\r\n    Kakao.Auth.setAccessToken(res.response.access_token);\r\n  };\r\n\r\n  const toggleBtnClick = () => setNewUser((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"What is your Email?\"\r\n        />\r\n        <input\r\n          onChange={onChange}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input type=\"submit\" value={newUser ? \"Create\" : \"Log In\"} />\r\n      </Form>\r\n      <button onClick={toggleBtnClick}>{newUser ? \"Sign In\" : \"Create\"}</button>\r\n      <div>{error}</div>\r\n      <SocialLogin>\r\n        <button onClick={socialLoginClick} name={\"google\"}>\r\n          Google Login\r\n        </button>\r\n        <button onClick={socialLoginClick} name={\"github\"}>\r\n          GitHub Login\r\n        </button>\r\n        <KakaoLogin\r\n          jsKey=\"e2a2fd82f5c318edfb424144be286f47\"\r\n          onSuccess={(result) => responseKakao(result)}\r\n          onFailure={(error) => console.log(error)}\r\n          getProfile={true}\r\n        ></KakaoLogin>\r\n      </SocialLogin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\React\\where\\src\\Routes\\MyPage.js",["71","72","73","74"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Navigator from \"../Components/Navigator\";\r\nimport { storeService } from \"../firebase\";\r\nimport { queryAllByAttribute } from \"@testing-library/react\";\r\nimport placeCode from \"../placeCode\";\r\nimport Map from \"../Components/map\";\r\n\r\nconst { kakao, Kakao } = window;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\nconst Container = styled.div``;\r\nconst StoreKind = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  li {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst ShowWindow = styled.ul``;\r\n\r\nconst ItemList = styled.li`\r\n  button.display {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MyPage = ({ userObj }) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [position, setPosition] = useState([]);\r\n  const [map, setMap] = useState(null);\r\n  const [list, setList] = useState([]);\r\n  const [marker, setMarker] = useState([]);\r\n  const [bounds, setBounds] = useState();\r\n\r\n  const getData = async () => {\r\n    let testArray = [];\r\n    const test = await storeService\r\n      .collection(`where-${userObj.uid}`)\r\n      .get(queryAllByAttribute);\r\n    test.forEach((item) => testArray.push(item.data()));\r\n    setPlaces(testArray);\r\n    setList(testArray);\r\n    setPosition([testArray[0].y, testArray[0].x]); // 임시 코드\r\n  };\r\n\r\n  const initMarkerDraw = () => {\r\n    const testArray = [];\r\n    const testBound = new kakao.maps.LatLngBounds();\r\n\r\n    for (let i = 0; i < places.length; i++) {\r\n      const imageSrc = placeCode[places[i].category_group_code].url;\r\n      const imageSize = new kakao.maps.Size(36, 37); // 마커 이미지의 크기\r\n      const imageOption = { offset: new kakao.maps.Point(27, 37) };\r\n\r\n      const markerImage = new kakao.maps.MarkerImage(\r\n        imageSrc,\r\n        imageSize,\r\n        imageOption\r\n      );\r\n\r\n      const newLat = new kakao.maps.LatLng(places[i].y, places[i].x);\r\n      const marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: newLat,\r\n        title: places[i].place_name,\r\n        image: markerImage,\r\n        clickable: true,\r\n        disableClickZoom: true,\r\n      });\r\n      //setMarker(prev => [...prev,marker]);\r\n      //testBound.extend(newLat);\r\n      marker.setMap(map);\r\n      testArray.push({ marker, code: places[i].category_group_code });\r\n      setMarker(testArray);\r\n      testBound.extend(newLat);\r\n      setBounds(testBound);\r\n    }\r\n    map.setBounds(testBound);\r\n  };\r\n\r\n  const storeTitleClick = (e) => {\r\n    const {\r\n      target: { id },\r\n    } = e;\r\n    let showMarker = [];\r\n    const testBound = new kakao.maps.LatLngBounds();\r\n\r\n    if (id !== \"기타\" && id !== \"전체보기\") {\r\n      //카테고리 타입이 id인 요소들을 찾아준다.\r\n      setList(\r\n        places.filter((item) =>\r\n          item.category_group_name === id ? true : false\r\n        )\r\n      );\r\n    } else if (id === \"기타\") {\r\n      setList(\r\n        places.filter((item) =>\r\n          item.category_group_name !== \"음식점\" &&\r\n          item.category_group_name !== \"카페\" &&\r\n          item.category_group_name !== \"숙박\" &&\r\n          item.category_group_name !== \"편의점\" &&\r\n          item.category_group_name !== \"병원\" &&\r\n          item.category_group_name !== \"약국\" &&\r\n          item.category_group_name !== \"관광명소\"\r\n            ? true\r\n            : false\r\n        )\r\n      );\r\n    } else {\r\n      setList(places);\r\n    }\r\n\r\n    //리스트를 클릭하면 그 해당하는 리스트 마커만 표시해준다.\r\n    if (id !== \"전체보기\") {\r\n      for (let i = 0; i < marker.length; i++) {\r\n        if (placeCode[marker[i].code].title === id) {\r\n          showMarker.push(marker[i]);\r\n          marker[i].marker.setMap(map);\r\n          testBound.extend(new kakao.maps.LatLng(places[i].y, places[i].x));\r\n        } else {\r\n          marker[i].marker.setMap(null);\r\n        }\r\n      }\r\n\r\n      if (showMarker.length !== 0)\r\n        // 리스트에 뭐가 있을때만  그 리스트의 목록들 중심좌표로 이동\r\n        map.setBounds(testBound);\r\n      else map.setBounds(bounds);\r\n    } else {\r\n      marker.forEach((item) => item.marker.setMap(map));\r\n      showMarker = marker;\r\n      map.setBounds(bounds);\r\n    }\r\n\r\n    // 그 리스트들만 보이게 중심좌표 이동\r\n  };\r\n\r\n  const listItemClick = (e) => {\r\n    const {\r\n      target: { lastChild, innerText },\r\n    } = e;\r\n    let changeText;\r\n    lastChild.classList.toggle(\"display\");\r\n    //리스트를 클릭하는 순간 지도 중심점 이동\r\n    innerText.includes(\"공유\")\r\n      ? (changeText = innerText.split(\"공유\")[0])\r\n      : (changeText = innerText);\r\n    const [target] = places.filter((item) => item.place_name === changeText);\r\n    const movePoint = new kakao.maps.LatLng(target.y, target.x);\r\n    map.setLevel(3);\r\n    map.setCenter(movePoint);\r\n    const center = document.querySelector(\"#map\").firstChild;\r\n    center.style.display = \"block\";\r\n    setTimeout(() => {\r\n      center.style.display = \"none\";\r\n    }, 4000);\r\n  };\r\n\r\n  const sendMessage = (address, title, imageUrl) => {\r\n    Kakao.Link.sendDefault({\r\n      objectType: \"location\",\r\n      address,\r\n      addressTitle: title,\r\n      content: {\r\n        title: \"장소 공유\",\r\n        description: title,\r\n        imageUrl,\r\n        link: {\r\n          webUrl: \"https://developers.kakao.com\", // 추후 수정 필요\r\n        },\r\n      },\r\n      buttons: [\r\n        {\r\n          title: \"웹으로 이동\",\r\n          link: {\r\n            mobileWebUrl: \"https://developers.kakao.com\", // 추후 수정 필요\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const shareBtnClick = (e) => {\r\n    e.stopPropagation();\r\n    const {\r\n      target: { id },\r\n    } = e;\r\n    const [place] = places.filter((item) => item.id === id);\r\n    //친구한테 공유를 해줘야한다.\r\n    //test\r\n\r\n    sendMessage(\r\n      place.address_name,\r\n      place.place_name,\r\n      placeCode[place.category_group_code].url\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      initMarkerDraw();\r\n    }\r\n  }, [map]);\r\n\r\n  //1.음식점 2.카페 3.숙박 4.편의점 5.병원 6.약국 7.관광명소 8.\r\n\r\n  return (\r\n    <>\r\n      <Navigator />\r\n      <Wrapper>\r\n        <Map position={position} setMap={setMap} isMyPage={true}></Map>\r\n        <Container>\r\n          <StoreKind>\r\n            <li key=\"0\" onClick={storeTitleClick} id=\"전체보기\">\r\n              전체보기\r\n            </li>\r\n            <li key=\"1\" onClick={storeTitleClick} id=\"음식점\">\r\n              음식점\r\n            </li>\r\n            <li key=\"2\" onClick={storeTitleClick} id=\"카페\">\r\n              카페\r\n            </li>\r\n            <li key=\"3\" onClick={storeTitleClick} id=\"숙박\">\r\n              숙박\r\n            </li>\r\n            <li key=\"4\" onClick={storeTitleClick} id=\"편의점\">\r\n              편의점\r\n            </li>\r\n            <li key=\"5\" onClick={storeTitleClick} id=\"병원\">\r\n              병원\r\n            </li>\r\n            <li key=\"6\" onClick={storeTitleClick} id=\"약국\">\r\n              약국\r\n            </li>\r\n            <li key=\"7\" onClick={storeTitleClick} id=\"관광명소\">\r\n              관광명소\r\n            </li>\r\n            <li key=\"8\" onClick={storeTitleClick} id=\"기타\">\r\n              기타\r\n            </li>\r\n          </StoreKind>\r\n          <ShowWindow>\r\n            {list.length !== 0\r\n              ? list.map((item) => (\r\n                  <ItemList onClick={listItemClick} key={item.id}>\r\n                    {item.place_name}\r\n                    <button\r\n                      id={item.id}\r\n                      onClick={shareBtnClick}\r\n                      className=\"display\"\r\n                    >\r\n                      공유\r\n                    </button>\r\n                  </ItemList>\r\n                ))\r\n              : \"\"}\r\n          </ShowWindow>\r\n        </Container>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","C:\\React\\where\\src\\Components\\Navigator.js",["75"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Container =styled.ul``;\r\n\r\nconst SLink=styled(Link)``;\r\n\r\n\r\n\r\nconst Navigator = () =>{\r\n    return(\r\n    <Container>\r\n        <li><SLink to=\"/\">Home</SLink></li>\r\n        <li><SLink to=\"/mypage\">MyPage</SLink></li>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default Navigator;","C:\\React\\where\\src\\placeCode.js",[],"C:\\React\\where\\src\\Components\\roadview.js",["76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":11},{"ruleId":"83","severity":1,"message":"87","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":37,"column":10,"nodeType":"85","messageId":"86","endLine":37,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":38,"column":22,"nodeType":"85","messageId":"86","endLine":38,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":62,"column":6,"nodeType":"92","endLine":62,"endColumn":16,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"94","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"95","line":2,"column":30,"nodeType":"85","messageId":"86","endLine":2,"endColumn":38},{"ruleId":"83","severity":1,"message":"96","line":2,"column":45,"nodeType":"85","messageId":"86","endLine":2,"endColumn":51},{"ruleId":"83","severity":1,"message":"87","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":17},{"ruleId":"83","severity":1,"message":"97","line":10,"column":16,"nodeType":"85","messageId":"86","endLine":10,"endColumn":21},{"ruleId":"83","severity":1,"message":"98","line":170,"column":10,"nodeType":"85","messageId":"86","endLine":170,"endColumn":15},{"ruleId":"83","severity":1,"message":"99","line":305,"column":11,"nodeType":"85","messageId":"86","endLine":305,"endColumn":17},{"ruleId":"90","severity":1,"message":"100","line":343,"column":6,"nodeType":"92","endLine":343,"endColumn":13,"suggestions":"101"},{"ruleId":"83","severity":1,"message":"87","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":17},{"ruleId":"83","severity":1,"message":"102","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"103","line":31,"column":9,"nodeType":"85","messageId":"86","endLine":31,"endColumn":13},{"ruleId":"83","severity":1,"message":"104","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":13},{"ruleId":"83","severity":1,"message":"87","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":17},{"ruleId":"90","severity":1,"message":"105","line":207,"column":6,"nodeType":"92","endLine":207,"endColumn":8,"suggestions":"106"},{"ruleId":"90","severity":1,"message":"107","line":213,"column":6,"nodeType":"92","endLine":213,"endColumn":11,"suggestions":"108"},{"ruleId":"83","severity":1,"message":"87","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":17},{"ruleId":"83","severity":1,"message":"87","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":17},{"ruleId":"90","severity":1,"message":"109","line":126,"column":6,"nodeType":"92","endLine":126,"endColumn":30,"suggestions":"110"},{"ruleId":"90","severity":1,"message":"111","line":132,"column":6,"nodeType":"92","endLine":132,"endColumn":8,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'marker' is assigned a value but never used.","'setControll' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'controller', 'isMyPage', 'positionObj', and 'setMap'. Either include them or remove the dependency array. If 'setMap' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["115"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'Kakao' is assigned a value but never used.","'error' is assigned a value but never used.","'listes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'map' and 'markers'. Either include them or remove the dependency array.",["116"],"'KaKaoLogin' is defined but never used.","'user' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'initMarkerDraw'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'map' and 'marker'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'roadViewObj.x' and 'roadViewObj.y'. Either include them or remove the dependency array. If 'setMapWalker' needs the current value of 'roadViewObj.y', you can also switch to useReducer instead of useState and read 'roadViewObj.y' in the reducer.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [controller, isMyPage, position, positionObj, setMap]",{"range":"133","text":"134"},"Update the dependencies array to be: [map, markers, place]",{"range":"135","text":"136"},"Update the dependencies array to be: [getData]",{"range":"137","text":"138"},"Update the dependencies array to be: [initMarkerDraw, map]",{"range":"139","text":"140"},"Update the dependencies array to be: [roadViewObj, mapWalker, map, marker]",{"range":"141","text":"142"},"Update the dependencies array to be: [roadViewObj.x, roadViewObj.y]",{"range":"143","text":"144"},[1505,1515],"[controller, isMyPage, position, positionObj, setMap]",[8747,8754],"[map, markers, place]",[5771,5773],"[getData]",[5853,5858],"[initMarkerDraw, map]",[3940,3964],"[roadViewObj, mapWalker, map, marker]",[4091,4093],"[roadViewObj.x, roadViewObj.y]"]