[{"C:\\React\\where\\src\\index.js":"1","C:\\React\\where\\src\\Components\\App.js":"2","C:\\React\\where\\src\\firebase.js":"3","C:\\React\\where\\src\\Components\\map.js":"4","C:\\React\\where\\src\\Components\\Router.js":"5","C:\\React\\where\\src\\Routes\\Home.js":"6","C:\\React\\where\\src\\Routes\\Auth.js":"7","C:\\React\\where\\src\\Routes\\MyPage.js":"8","C:\\React\\where\\src\\Components\\Navigator.js":"9","C:\\React\\where\\src\\placeCode.js":"10"},{"size":168,"mtime":1608687167858,"results":"11","hashOfConfig":"12"},{"size":742,"mtime":1609243913226,"results":"13","hashOfConfig":"12"},{"size":634,"mtime":1609114902406,"results":"14","hashOfConfig":"12"},{"size":1012,"mtime":1608797715804,"results":"15","hashOfConfig":"12"},{"size":687,"mtime":1609160381696,"results":"16","hashOfConfig":"12"},{"size":7418,"mtime":1609584773741,"results":"17","hashOfConfig":"12"},{"size":3179,"mtime":1609590264431,"results":"18","hashOfConfig":"12"},{"size":7750,"mtime":1609590610157,"results":"19","hashOfConfig":"12"},{"size":429,"mtime":1609160782364,"results":"20","hashOfConfig":"12"},{"size":2622,"mtime":1609206687813,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1j0po3t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\React\\where\\src\\index.js",[],["48","49"],"C:\\React\\where\\src\\Components\\App.js",["50"],"import { useEffect, useState } from \"react\";\nimport { authService } from \"../firebase\";\nimport Map from \"./map\";\nimport AppRouter from \"./Router\";\n\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [userObj,setUserObj] = useState(null); \n\n  useEffect(()=>{\n    authService.onAuthStateChanged(user=>{\n      if(user){ \n        setUserObj({\n          displayName:user.displayName ? user.displayName : \"anonymous\",\n          uid:user.uid,\n          updateProfile:(who)=>user.updateProfile(who)\n        })\n      }else{\n         setUserObj(null);\n      }\n      setInit(true);\n    })\n  },[])\n\n\n  return (\n      init ? <AppRouter isLogIn={Boolean(userObj)} userObj={userObj}></AppRouter> : \"Loading....\"\n  );\n}\n\nexport default App;\n","C:\\React\\where\\src\\firebase.js",[],"C:\\React\\where\\src\\Components\\map.js",["51","52","53","54","55"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst {kakao} =window;\r\nconst Map =({position,setMap})=>{\r\n  \r\nconst [marker,setMarker] =useState(null);\r\nconst [controller,setControll]=useState(new kakao.maps.ZoomControl());\r\n\r\n    \r\n useEffect(()=>{\r\n    \r\n\r\n    const container = document.getElementById(\"map\");\r\n    const options = {\r\n        center : new kakao.maps.LatLng(position[0], position[1]),\r\n        level:3,\r\n    };\r\n\r\n    const map = new kakao.maps.Map(container,options);\r\n    //맵이 생성 되면 마크를 생성한다. \r\n    setMarker(new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(position[0], position[1])\r\n    }))\r\n    // 컨트롤러 생성\r\n    map.addControl(controller,kakao.maps.ControlPosition.TOPRIGHT);\r\n    setMap(map);\r\n    \r\n },[position]);\r\n\r\n\r\n    return (<div id=\"map\" style={{width:\"500px\", height:\"500px\"}}>지도</div>)\r\n}\r\n\r\nexport default Map;","C:\\React\\where\\src\\Components\\Router.js",["56","57","58"],"import React, { useState } from \"react\";\r\nimport {HashRouter as Router,Redirect,Route,Switch} from \"react-router-dom\";\r\nimport Auth from \"../Routes/Auth\";\r\nimport Home from \"../Routes/Home\";\r\nimport MyPage from \"../Routes/MyPage\";\r\n\r\n\r\n\r\nconst AppRouter =({isLogIn, userObj}) =>{\r\n\r\n    return (\r\n        <Router>\r\n            {isLogIn ?\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n            </Route>\r\n            <Route path=\"/mypage\">\r\n                <MyPage userObj={userObj} />\r\n            </Route>\r\n            </>\r\n            :<Route exact path=\"/\"><Auth/></Route>}\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","C:\\React\\where\\src\\Routes\\Home.js",["59","60","61","62","63"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Map from \"../Components/map\";\r\nimport { storeService } from \"../firebase\";\r\nimport { queryAllByAttribute } from \"@testing-library/react\";\r\nimport Navigator from \"../Components/Navigator\";\r\n\r\nconst { kakao, Kakao } = window;\r\n\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst SearchSubWrapper = styled.div``;\r\nconst ButtonWrapper = styled.div``;\r\n\r\nconst SearchForm = styled.form``;\r\n\r\nconst PlaceList = styled.ul`\r\n  li {\r\n    button {\r\n      &.display {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [position, setPosition] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [map, setMap] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [place, setPlace] = useState([]);\r\n  const [markers, setMarker] = useState([]); // 마커들을 검색하고 저장해둔 다음 지워줘야 한다.\r\n  const [bounds, setBounds] = useState();\r\n\r\n  const handleNavigate = (position) => {\r\n    setPosition([position.coords.latitude, position.coords.longitude]);\r\n  };\r\n\r\n  const handleSearchFun = (result, status) => {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n      setPlace(result);\r\n      const movePoint = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n      map.panTo(movePoint);\r\n    } else {\r\n      setError(\"찾을 수 없습니다.\");\r\n    }\r\n  };\r\n\r\n  const handleListClick = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      target: { id },\r\n    } = e;\r\n    const where = place[parseInt(id)];\r\n\r\n    //클릭하는 순간 중심점을 이동시킨다.\r\n    const movePoint = new kakao.maps.LatLng(where.y, where.x);\r\n    map.panTo(movePoint);\r\n    //저장 버튼을 활성화 시킨다.  저장을 누르면 카테고리 별로 저장시킨다.\r\n    e.target.lastChild.classList.toggle(\"display\");\r\n  };\r\n\r\n  const saveFunction = async (newSavePlace, save) => {\r\n    if (save) {\r\n      await storeService.collection(`where-${userObj.uid}`).add(newSavePlace);\r\n      console.log(\"저장성공\");\r\n    } else {\r\n      setError(\"이미 저장되어있는 장소입니다.\");\r\n      console.log(\"실패\");\r\n    }\r\n  };\r\n\r\n  const handleSaveClick = async (e) => {\r\n    e.stopPropagation();\r\n    const attributes = [];\r\n    let save = true;\r\n    const {\r\n      target: {\r\n        parentNode: { id },\r\n      },\r\n    } = e;\r\n    const object = place[id];\r\n\r\n    //위 object를 파이어베이스에 저장해줘야 한다. //유저 아이디에 따라달리\r\n    // id의 따른 콜렉션을 만들어주고 그안에 장소들을 저장해준다.\r\n    let newPlace = {\r\n      ...object,\r\n      creator: userObj.uid,\r\n    };\r\n\r\n    const test = await storeService\r\n      .collection(`where-${userObj.uid}`)\r\n      .get(queryAllByAttribute);\r\n    test.forEach((item) => attributes.push(item.data()));\r\n\r\n    attributes.forEach((item) =>\r\n      item.place_name === newPlace.place_name ? (save = false) : \"\"\r\n    );\r\n    saveFunction(newPlace, save);\r\n  };\r\n\r\n  const handleMapSizeClick = (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    const mapLevel = map.getLevel();\r\n    if (name === \"plus\") {\r\n      map.setLevel(mapLevel - 1);\r\n    } else {\r\n      map.setLevel(mapLevel + 1);\r\n    }\r\n  };\r\n\r\n  const handleMapKindClick = (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    if (name === \"roadmap\") {\r\n      map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP);\r\n    } else {\r\n      map.setMapTypeId(kakao.maps.MapTypeId.HYBRID);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (map) {\r\n      const places = new kakao.maps.services.Places([map]);\r\n      places.keywordSearch(search, handleSearchFun);\r\n    }\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"place\") {\r\n      setSearch(value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation)\r\n      navigator.geolocation.getCurrentPosition(handleNavigate);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const imageSrc =\r\n      \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\";\r\n    const listes = document.querySelectorAll(\".list\");\r\n    const testBound = new kakao.maps.LatLngBounds();\r\n    //전 마커들을 지워준다.\r\n    for (let i = 0; i < markers.length; i++) {\r\n      markers[i].setMap(null);\r\n    }\r\n\r\n    for (let i = 0; i < place.length; i++) {\r\n      const imageSize = new kakao.maps.Size(36, 37); // 마커 이미지의 크기\r\n      const imgOptions = {\r\n        spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n        spriteOrigin: new kakao.maps.Point(0, i * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n        offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n      };\r\n\r\n      const markerImage = new kakao.maps.MarkerImage(\r\n        imageSrc,\r\n        imageSize,\r\n        imgOptions\r\n      );\r\n\r\n      const newLat = new kakao.maps.LatLng(place[i].y, place[i].x);\r\n      const marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: newLat,\r\n        title: place[i].place_name,\r\n        image: markerImage,\r\n        clickable: true,\r\n        disableClickZoom: true,\r\n      });\r\n      setMarker((prev) => [...prev, marker]);\r\n      testBound.extend(newLat);\r\n    }\r\n    setBounds(testBound);\r\n  }, [place]);\r\n\r\n  return (\r\n    <>\r\n      <Navigator />\r\n      <SearchWrapper>\r\n        <SearchSubWrapper>\r\n          {position !== [] ? (\r\n            <Map position={position} setMap={setMap}></Map>\r\n          ) : (\r\n            <div>\"Loading...\"</div>\r\n          )}\r\n          <ButtonWrapper>\r\n            {place.length !== 0 ? (\r\n              <button onClick={() => map.setBounds(bounds)}>한번에 보기</button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <button onClick={handleMapSizeClick} name=\"minus\">\r\n              지도 축소\r\n            </button>\r\n            <button onClick={handleMapSizeClick} name=\"plus\">\r\n              지도 확대\r\n            </button>\r\n            <button onClick={handleMapKindClick} name=\"roadmap\">\r\n              지도\r\n            </button>\r\n            <button onClick={handleMapKindClick} name=\"skymap\">\r\n              스카이뷰\r\n            </button>\r\n          </ButtonWrapper>\r\n        </SearchSubWrapper>\r\n        <PlaceList>\r\n          {place.length !== 0\r\n            ? place.map((item, index) => (\r\n                <li\r\n                  onClick={handleListClick}\r\n                  key={index}\r\n                  id={index}\r\n                  className=\"list\"\r\n                >\r\n                  {item.place_name}\r\n                  <button onClick={handleSaveClick} className=\"display\">\r\n                    저장\r\n                  </button>\r\n                </li>\r\n              ))\r\n            : \"\"}\r\n        </PlaceList>\r\n        <SearchForm onSubmit={onSubmit}>\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Search..\"\r\n            name=\"place\"\r\n            value={search}\r\n          />\r\n          <input type=\"submit\" value=\"Search\" />\r\n        </SearchForm>\r\n      </SearchWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\React\\where\\src\\Routes\\Auth.js",["64","65","66"],"C:\\React\\where\\src\\Routes\\MyPage.js",["67","68","69","70","71","72"],"C:\\React\\where\\src\\Components\\Navigator.js",["73"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Container =styled.ul``;\r\n\r\nconst SLink=styled(Link)``;\r\n\r\n\r\n\r\nconst Navigator = () =>{\r\n    return(\r\n    <Container>\r\n        <li><SLink to=\"/\">Home</SLink></li>\r\n        <li><SLink to=\"/mypage\">MyPage</SLink></li>\r\n    </Container>\r\n    )\r\n}\r\n\r\nexport default Navigator;","C:\\React\\where\\src\\placeCode.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":11},{"ruleId":"78","severity":1,"message":"82","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"83","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":14},{"ruleId":"78","severity":1,"message":"85","line":11,"column":19,"nodeType":"80","messageId":"81","endLine":11,"endColumn":30},{"ruleId":"86","severity":1,"message":"87","line":33,"column":4,"nodeType":"88","endLine":33,"endColumn":14,"suggestions":"89"},{"ruleId":"78","severity":1,"message":"90","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"91","line":2,"column":30,"nodeType":"80","messageId":"81","endLine":2,"endColumn":38},{"ruleId":"78","severity":1,"message":"92","line":2,"column":45,"nodeType":"80","messageId":"81","endLine":2,"endColumn":51},{"ruleId":"78","severity":1,"message":"83","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":17},{"ruleId":"78","severity":1,"message":"93","line":9,"column":16,"nodeType":"80","messageId":"81","endLine":9,"endColumn":21},{"ruleId":"78","severity":1,"message":"94","line":34,"column":10,"nodeType":"80","messageId":"81","endLine":34,"endColumn":15},{"ruleId":"78","severity":1,"message":"95","line":156,"column":11,"nodeType":"80","messageId":"81","endLine":156,"endColumn":17},{"ruleId":"86","severity":1,"message":"96","line":190,"column":6,"nodeType":"88","endLine":190,"endColumn":13,"suggestions":"97"},{"ruleId":"78","severity":1,"message":"83","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":17},{"ruleId":"78","severity":1,"message":"98","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":18},{"ruleId":"78","severity":1,"message":"99","line":31,"column":9,"nodeType":"80","messageId":"81","endLine":31,"endColumn":13},{"ruleId":"78","severity":1,"message":"100","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"83","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"101","line":153,"column":9,"nodeType":"80","messageId":"81","endLine":153,"endColumn":20},{"ruleId":"78","severity":1,"message":"102","line":196,"column":12,"nodeType":"80","messageId":"81","endLine":196,"endColumn":17},{"ruleId":"86","severity":1,"message":"103","line":203,"column":6,"nodeType":"88","endLine":203,"endColumn":8,"suggestions":"104"},{"ruleId":"86","severity":1,"message":"105","line":209,"column":6,"nodeType":"88","endLine":209,"endColumn":11,"suggestions":"106"},{"ruleId":"78","severity":1,"message":"83","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":17},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Map' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'PropTypes' is defined but never used.","'marker' is assigned a value but never used.","'setControll' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'controller' and 'setMap'. Either include them or remove the dependency array. If 'setMap' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["109"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'Kakao' is assigned a value but never used.","'error' is assigned a value but never used.","'listes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'map' and 'markers'. Either include them or remove the dependency array.",["110"],"'KaKaoLogin' is defined but never used.","'user' is assigned a value but never used.","'axios' is defined but never used.","'sendMessage' is assigned a value but never used.","'place' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'initMarkerDraw'. Either include it or remove the dependency array.",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [controller, position, setMap]",{"range":"121","text":"122"},"Update the dependencies array to be: [map, markers, place]",{"range":"123","text":"124"},"Update the dependencies array to be: [getData]",{"range":"125","text":"126"},"Update the dependencies array to be: [initMarkerDraw, map]",{"range":"127","text":"128"},[851,861],"[controller, position, setMap]",[5133,5140],"[map, markers, place]",[5472,5474],"[getData]",[5554,5559],"[initMarkerDraw, map]"]